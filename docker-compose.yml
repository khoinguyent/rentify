services:
  postgres:
    image: postgres:16-alpine
    container_name: rentify-postgres
    restart: unless-stopped
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: rentify
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
      target: development
    container_name: rentify-api
    restart: unless-stopped
    ports:
      - '3001:3001'
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/rentify?schema=public
      API_PORT: 3001
      JWT_SECRET: ${JWT_SECRET:-dev-secret-key-change-in-production}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-7d}
      CORS_ORIGIN: http://localhost:3000
      NODE_ENV: development
    volumes:
      - ./apps/api:/app/apps/api
      - ./packages:/app/packages
      - /app/node_modules
      - /app/apps/api/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    command: pnpm --filter @rentify/api dev

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
      target: development
    container_name: rentify-web
    restart: unless-stopped
    ports:
      - '3000:3000'
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/rentify?schema=public
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-dev-nextauth-secret-change-in-production}
      NEXT_PUBLIC_API_URL: http://localhost:3001/api
      NODE_ENV: development
    volumes:
      - ./apps/web:/app/apps/web
      - ./packages:/app/packages
      - /app/node_modules
      - /app/apps/web/node_modules
      - /app/apps/web/.next
    depends_on:
      postgres:
        condition: service_healthy
    command: pnpm --filter @rentify/web dev

volumes:
  postgres_data:

